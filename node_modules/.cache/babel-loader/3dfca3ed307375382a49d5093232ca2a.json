{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport Axios from 'axios';\nimport { connect } from 'react-redux';\nimport { userActions } from './redux/actions'; // const Cari = () => {\n//\n//    const [repoList, setRepoList] = useState([]);\n//    const [user, setUser] = useState([]);\n//    const state = useRef(null);\n//\n//    const pencarian = () => {\n//       let cari = this.refs.usernamecari.value\n//\n//        Axios.get(`https://api.github.com/users/${cari}/repos`)\n//        .then((res) => {\n//           localStorage.setItem('ignatius',res.data[0].owner.login)\n//           this.props.userActions(res.data[0].owner.login)\n//\n//           setRepoList( res.data )\n//           setUser( res.data.owner )\n//        }).catch((err) => {\n//           console.log(err)\n//        })\n//    }\n//\n//      const renderrepo=()=>{\n//         return repoList.map((val,index) => {\n//             return(\n//                 <tr key={index}>\n//                     <td>{val.id}</td>\n//                     <td>{val.name}</td>\n//                     <td>{val.full_name}</td>\n//                     <td>{val.html_url}</td>\n//                 </tr>\n//             )\n//         })\n//      }\n//\n//       return (\n//           <div>\n//               <div><br />\n//                   <input style={{width:'200px', textAlign:'center'}} ref=\"usernamecari\" className=\"form-control\" type=\"text\" placeholder=\"Search Github Username\" aria-label=\"Search\" />\n//                   <button className=\"mb-5\" type=\"button\" onClick={pencarian} className=\"btn btn-outline-default btn-rounded waves-effect]\">Search!</button>\n//               </div>\n//               {\n//                   repoList.length?\n//                   <div>\n//                       <h3><strong>Repositories</strong></h3>\n//                       <table style={{marginLeft:'35vh'}} className=\"table table-bordered\">\n//                           <thead>\n//                               <tr>\n//                                   <th scope=\"col\">ID</th>\n//                                   <th scope=\"col\">Name</th>\n//                                   <th scope=\"col\">Full Name</th>\n//                                   <th scope=\"col\">HTML</th>\n//                               </tr>\n//                           </thead>\n//                           <tbody>\n//                               {renderrepo}\n//                           </tbody>\n//                       </table>\n//                   </div>\n//                   :\n//                   null\n//               }\n//           </div>\n//        );\n//\n// }\n\nconst MapstateToprops = state => {\n  return {\n    usernameR: state.usernameR\n  };\n};\n\n_c = MapstateToprops;\nexport default connect(MapstateToprops, {\n  userActions\n})(Cari);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapstateToprops\");","map":{"version":3,"sources":["/Users/rahman/Documents/Tes/Tes.SoftwareSeni/github_search/src/Cari.js"],"names":["React","useState","useRef","Axios","connect","userActions","MapstateToprops","state","usernameR","Cari"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,iBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAM;AACJC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADb,GAAN;AAGD,CAJH;;KAAMF,e;AAMN,eAAeF,OAAO,CAACE,eAAD,EAAkB;AAACD,EAAAA;AAAD,CAAlB,CAAP,CAAwCI,IAAxC,CAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Axios from 'axios';\nimport { connect } from 'react-redux'\nimport { userActions } from './redux/actions'\n\n// const Cari = () => {\n//\n//    const [repoList, setRepoList] = useState([]);\n//    const [user, setUser] = useState([]);\n//    const state = useRef(null);\n//\n//    const pencarian = () => {\n//       let cari = this.refs.usernamecari.value\n//\n//        Axios.get(`https://api.github.com/users/${cari}/repos`)\n//        .then((res) => {\n//           localStorage.setItem('ignatius',res.data[0].owner.login)\n//           this.props.userActions(res.data[0].owner.login)\n//\n//           setRepoList( res.data )\n//           setUser( res.data.owner )\n//        }).catch((err) => {\n//           console.log(err)\n//        })\n//    }\n//\n//      const renderrepo=()=>{\n//         return repoList.map((val,index) => {\n//             return(\n//                 <tr key={index}>\n//                     <td>{val.id}</td>\n//                     <td>{val.name}</td>\n//                     <td>{val.full_name}</td>\n//                     <td>{val.html_url}</td>\n//                 </tr>\n//             )\n//         })\n//      }\n//\n//       return (\n//           <div>\n//               <div><br />\n//                   <input style={{width:'200px', textAlign:'center'}} ref=\"usernamecari\" className=\"form-control\" type=\"text\" placeholder=\"Search Github Username\" aria-label=\"Search\" />\n//                   <button className=\"mb-5\" type=\"button\" onClick={pencarian} className=\"btn btn-outline-default btn-rounded waves-effect]\">Search!</button>\n//               </div>\n//               {\n//                   repoList.length?\n//                   <div>\n//                       <h3><strong>Repositories</strong></h3>\n//                       <table style={{marginLeft:'35vh'}} className=\"table table-bordered\">\n//                           <thead>\n//                               <tr>\n//                                   <th scope=\"col\">ID</th>\n//                                   <th scope=\"col\">Name</th>\n//                                   <th scope=\"col\">Full Name</th>\n//                                   <th scope=\"col\">HTML</th>\n//                               </tr>\n//                           </thead>\n//                           <tbody>\n//                               {renderrepo}\n//                           </tbody>\n//                       </table>\n//                   </div>\n//                   :\n//                   null\n//               }\n//           </div>\n//        );\n//\n// }\n\nconst MapstateToprops = (state) =>{\n    return{\n      usernameR: state.usernameR\n    }\n  }\n\nexport default connect(MapstateToprops, {userActions})(Cari);\n"]},"metadata":{},"sourceType":"module"}